<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="../../T4/T4Manager.ttinclude" #>
<#@ include file="../../T4/EntityHelper.ttinclude" #>
<# 
    // 是否是WCF服务模型
    bool serviceModel = false;
	var nameSpace="NQuick.DataAccess.DmCmccDdo";
    // 文件版权信息
    var copyright = DateTime.Now.Year + " xxxx Enterprises All Rights Reserved";
    var version = Environment.Version;
    var author = "auto generated by T4";	 
    var connectionString = @"server=127.0.0.1;uid=root;pwd=840904aA;charset=utf8;";

    // 需要解析的数据库
     var databases = new List<string> { "dm_cmcc_ddo" };
	 
    var manager = Manager.Create(Host, GenerationEnvironment);
    var entities = EntityHelper.GetEntities(connectionString,databases);

    foreach(Entity entity in entities)
    {		 
		var genClassName=entity.EntityName;//.Replace("_","");		 
		manager.StartNewFile(genClassName + "Repository.cs");
        //manager.StartNewFile(entity.EntityName + ".cs");
#>
//-----------------------------------------------------------------------
// <copyright file=" <#= genClassName #>Repository.cs" company="xxxx Enterprises">
// * Copyright (C) <#= copyright #>
// * version : <#= version #>
// * author  : <#= author #>
// * FileName: <#= entity.EntityName #>.cs
// * history : Created by T4 <#= DateTime.Now #> 
// </copyright>
//-----------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using NQuick.DataModel;
using NQuick.Common;
using NQuick.DataAccess.Base;
using NQuick.DataModel.Base;
using NQuick.Model;
using NQuick.Model.DmCmccDdo;

namespace <#= nameSpace #>
{ 
    /// <summary>
    /// 数据库处理层。多表联查、复杂的Dos.ORM写法都可以丢到这层来写。
    /// </summary>
    public partial class <#= genClassName #>Repository : Repository<<#= genClassName #>>
    {
        /// <summary>
        /// 
        /// </summary>
        public <#= genClassName #>Repository():base(Constant.DbConnectionName) 
        {
            
        }
    }
}
<#        
        manager.EndBlock(); 
    }

    manager.Process(true);
#>

