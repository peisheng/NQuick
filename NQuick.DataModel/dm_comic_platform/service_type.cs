//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace NQuick.Model.DmComicPlatform
{

	/// <summary>
	/// 实体类service_type 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("service_type")]
	[Serializable]
	public partial class service_type : Entity 
	{
		#region Model
		private int _id;
		private string _service_type;
		private string _type_name;
		private int? _sign;
		/// <summary>
		/// 
		/// </summary>
		public int id
		{
			get{ return _id; }
			set
			{
				this.OnPropertyValueChange(_.id,_id,value);
				this._id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Service_type
		{
			get{ return _service_type; }
			set
			{
				this.OnPropertyValueChange(_.service_type,_service_type,value);
				this._service_type=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string type_name
		{
			get{ return _type_name; }
			set
			{
				this.OnPropertyValueChange(_.type_name,_type_name,value);
				this._type_name=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? sign
		{
			get{ return _sign; }
			set
			{
				this.OnPropertyValueChange(_.sign,_sign,value);
				this._sign=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.id,
				_.service_type,
				_.type_name,
				_.sign};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._id,
				this._service_type,
				this._type_name,
				this._sign};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","service_type");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field id = new Field("id","service_type","id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field service_type = new Field("service_type","service_type","service_type");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field type_name = new Field("type_name","service_type","type_name");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field sign = new Field("sign","service_type","sign");
		}
		#endregion


	}
}

